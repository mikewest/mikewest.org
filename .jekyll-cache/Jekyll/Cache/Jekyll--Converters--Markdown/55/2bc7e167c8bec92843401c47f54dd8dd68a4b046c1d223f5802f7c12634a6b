I"º<p>In the last three weeks, I‚Äôve set up something like 6 virtual machines to play with a variety of bits and pieces of things that I come across.  Virtual machines are a perfect fit for, say, setting up <a href="http://couchdb.apache.org/">CouchDB</a> to see how it works, or for giving <a href="http://varnish.projects.linpro.no/">Varnish</a> a try.  They have the distinct advantage of being more or less throw-away sandboxes, where I simply don‚Äôt have to worry about accidentally screwing things up.  If I break PHP or PHPUnit on my development laptop, then I‚Äôve got real problems; if I break it in a VM, I make a new one.</p>

<p>Off the top of my head, here are a few lessons learned:</p>

<ol>
  <li>Buy youself a copy of <a href="http://vmware.com/products/fusion/">VMWare Fusion</a>.  In my experience, it‚Äôs been a
bit more stable than <a href="http://www.parallels.com/">Parallels</a>, and a <em>lot</em> friendlier than
<a href="http://www.virtualbox.org/">VirtualBox</a>.  There‚Äôs a great community around VMWare tools in general,
and if you end up using virtual machines for anything more than
development (deploying public applications, for instance), then you‚Äôll
literally be able to copy your VM over to a ‚Äúreal‚Äù server and run it
without problems.</li>
</ol>

<ol>
  <li>
    <p>Follow Brad‚Äôs <a href="http://intranation.com/entries/2009/03/development-virtual-machines-os-x-using-vmware-and/" title="Brad Wright: 'Development Virtual Machines on OS X using VMWare and Ubuntu'">excellent Ubuntu setup instructions</a>.  He
walks through the process of getting a baseline <a href="http://www.ubuntu.com/products/whatisubuntu/serveredition/jeos">JeOS</a> machine up and
running, which takes something on the order of 10 minutes.</p>

    <p>I‚Äôve tried a few distros of Linux and BSD, and in my opinion, JeOS hits
the sweet spot dead on.  It‚Äôs a relatively small install (~1GB, all said
and done), and runs very smoothly indeed with 256MB RAM.  It‚Äôs chock-full 
of Ubuntu goodness for package installs, and relatively easy to configure.</p>
  </li>
</ol>

<ol>
  <li>
    <p>Setup <a href="http://communities.vmware.com/docs/DOC-5611">linked clones</a> to save yourself some disk space, and to make the
process of spinning off new VMs as frictionless as possible.  In short,
this will allow you to install JeOS once, and use that install as a clean 
base for new machines without copying the entire disk.  You‚Äôll end up with
a ~1GB base and ~100MB VMs for each of your applications, which is a huge
savings indeed (especially if you want to carry a VM or two around with
you on a USB stick).</p>

    <p>It‚Äôs a bit of a manual process at this point, but very straightforwardly
explained, and easy to implement.  Hopefully VMWare will expose the
functionality via some sort of GUI in a future version, as they already do
in <a href="http://www.vmware.com/products/ws/">Workstation</a>.</p>

    <p>With linked clones, it‚Äôs <em>trivial</em> to bring up a new, clean VM to test
something out, or to install some new component.  It‚Äôs transformational:
you‚Äôll wonder how you <em>ever</em> got around with just one development
environment.</p>
  </li>
</ol>

<ol>
  <li>
    <p>After creating clones of an Ubuntu VM, you‚Äôll need to do a tiny bit of
work to get networking up and running again.  The system will be assigned
a new MAC address, and get a bit confused about the references to the old
virtual network card.</p>

    <p>Jamis Buck has <a href="http://weblog.jamisbuck.org/2008/8/15/cloning-ubuntu-hardy-image-in-vmware-fusion" title="Jamis Buck: 'Cloning Ubuntu Hardy image in VMWare Fusion'">described the solution in detail</a>, and I‚Äôve codified
it into a <a href="http://github.com/mikewest/homedir/blob/master/bin/update_copied_vm">small script</a>.  Grab that code, then just run
<code class="highlighter-rouge">update_copied_vm</code> to update the hostname, hosts file, and network
settings for the new VM.  Piece of cake‚Ä¶</p>
  </li>
</ol>

<ol>
  <li>For Windows development, browser testing, etc, visit your favourite
interweb download site, and find yourself a copy of <a href="http://en.wikipedia.org/wiki/TinyXP">TinyXP</a>.  Clever
folks have ripped all the inessential bits out of XP, meaning that it runs
 <em>quickly</em> with minimal investment of RAM and disk space.  Combined with
 the linked clones tip above, you‚Äôll have IE6, 7, and 8 test environments
up and running in no time at all.</li>
</ol>

<p>Developing your applications on virtual machines really does make your life simpler, and opens up opportunities for you to explore things that would have probably just been a <em>little bit</em> too much work to get running otherwise.  It‚Äôs very much worth the up-front investment to get yourself set up.</p>
:ET