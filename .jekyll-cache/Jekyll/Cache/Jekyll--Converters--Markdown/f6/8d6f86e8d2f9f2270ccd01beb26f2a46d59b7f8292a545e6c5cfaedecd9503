I"<p>Building interfaces for web applications is hard work, and it’s not made any easier by the dearth of <a href="http://en.wikipedia.org/wiki/Widget_%28computing%29" title="Wikipedia: 'Widgets'">widgets</a> available in modern browsers.  We’ve got the basics – <code class="highlighter-rouge">SELECT</code> dropdowns, <code class="highlighter-rouge">INPUT</code> text boxes – but native applications have a much wider selection of controls to choose from.  This lack can be mitigated with clever JavaScripting and CSS techniques; we can build them, we have the technology!</p>

<p>However, it’s critical to ensure that we don’t leave accessibility by the wayside when creating new UI controls for our applications.  I’ve got an article up on <a href="http://digital-web.com/" title="Digital Web Magazine: The web professional's online magazine of choice">Digital Web</a> that describes the basic guideline I adhere to when constructing widgets, cleverly entitled <a href="http://digital-web.com/articles/building_accessible_widgets_for_the_web/" title="Digital Web Magazine: 'Building Accessible Widgets for the Web'">“Building Accessible Widgets for the Web”</a>.  I’ve put together a working combo-box as an example of the technique, and I’m looking forward to <a href="http://digital-web.com/articles/building_accessible_widgets_for_the_web/comments/" title="Comment on the article">your feedback</a>.</p>

<p>Something that I gloss over in <a href="http://digital-web.com/articles/building_accessible_widgets_for_the_web/" title="Digital Web Magazine: 'Building Accessible Widgets for the Web'">the article</a> is the decision-making process that leads up to building a new widget, and I want to address that here, since it’s an important piece of the puzzle.  In short, <em>think about what you’re doing</em> when you decide to go with a custom piece of UI design.  <a href="http://www.garrettdimon.com/archives/front-end-architecture-browsers">Garrett Dimon</a> argues that <a href="http://www.garrettdimon.com/archives/front-end-architecture-browsers" title="Garrett Dimon: 'Front-End Architecture: Browsers'">customizing a form’s look and feel might harm usability</a> by breaking user expectations, and I agree.  Before building a new widget, ensure it makes sense for your application.  Something like a combo-box is pretty straightforward, users deal with the model everyday in the address bar of their browser, but a weird <a href="http://mikewest.org/archive/slidable-select-widgets-explained" title="Mike West: 'Slidable Select Widgets Explained'">sliding widget</a> might be pushing the limits a bit more.  Or, depending on your audience, the exact inverse might be true.  Make sure that usability is taken into account, along with accessibility, when you’re souping up your forms.</p>

:ET